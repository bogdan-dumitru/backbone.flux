(function(){Backbone.Flux={Mixins:{}}}).call(this),function(){Backbone.Flux.Store=_.extend(Backbone.Events,{isStore:!0}),Backbone.Flux.ModelStore=_.extend(Backbone.Flux.Store,{models:{},require:function(t){var e;return null!=(e=this.models)[t]?e[t]:e[t]=this.loadModel(t)},loadModel:function(t){var e;if(!this.model)throw"Model not specified on store";return e=new this.model({id:t}),e.fetch(),e.on("all",function(n){return function(r){var o,i;return i=""+t+":"+r,(o=/change:(.*)/.exec(r))?n.trigger(i,e.get(o[1])):n.trigger(i)}}(this)),e},update:function(t,e){return this.models[t].save(e,{patch:!0,success:function(n){return function(){var r,o;for(r in e)o=e[r],n.trigger(""+t+":update:"+r+":success");return n.trigger(""+t+":update:success")}}(this),error:function(n){return function(){var r,o;for(r in e)o=e[r],n.trigger(""+t+":update:"+r+":error");return n.trigger(""+t+":update:error")}}(this)})}})}.call(this),function(){Backbone.Flux.Mixins.StoreBinding={componentWillMount:function(){return this.bindStoreEventsFor(this.props)},componentWillReceiveProps:function(t){return this.bindStoreEventsFor(t,this.props)},bindStoreEventsFor:function(t,e){var n,r,o,i,s,u,c,a,l,h,f;h=this.storeEvents,f=[];for(l in h)i=h[l],a=this.normaliseStore(l),f.push(function(){var l,h;h=[];for(o in i)s=i[o],l=this.splitActionEvent(o),n=l[0],r=l[1],u=this.normaliseStoreEvent(r,t),void 0!==e?(c=this.normaliseStoreEvent(r,e),u!==c?(a.off(c,this[s]),h.push(a[n](u,this[s]))):h.push(void 0)):h.push(a[n](u,this[s]));return h}.call(this));return f},splitActionEvent:function(t){var e,n,r;return r=t.split(" "),e=r[0],n=r[1],_.present(n)||(n=e,e="on"),[e,n]},normaliseStore:function(t){var e;if(e=_.inject(t.split("."),function(t,e){return t[e]||{}},window),e.isStore===!1)throw"Storekey "+t+" does not seam to point to a store.";return e},normaliseStoreEvent:function(t,e){var n;return n=t.split(":"),_.map(n,function(t){var n,r;if(n=/<(.*)>/.exec(t)){if(r=n[1],!(r in e))throw"Event segment must be a part of the properties";return e[r]}return t}).join(":")}}}.call(this);